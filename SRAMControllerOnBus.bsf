/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/
/*
Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, the Altera Quartus Prime License Agreement,
the Altera MegaCore Function License Agreement, or other 
applicable license agreement, including, without limitation, 
that your use is for the sole purpose of programming logic 
devices manufactured by Altera and sold by Altera or its 
authorized distributors.  Please refer to the applicable 
agreement for further details.
*/
(header "symbol" (version "1.1"))
(symbol
	(rect 16 16 280 224)
	(text "SRAMControllerOnBus" (rect 5 0 100 12)(font "Arial" ))
	(text "inst" (rect 8 192 20 204)(font "Arial" ))
	(port
		(pt 0 32)
		(input)
		(text "busAck[31..0]" (rect 0 0 55 12)(font "Arial" ))
		(text "busAck[31..0]" (rect 21 27 76 39)(font "Arial" ))
		(line (pt 0 32)(pt 16 32)(line_width 3))
	)
	(port
		(pt 0 48)
		(input)
		(text "nRst" (rect 0 0 20 12)(font "Arial" ))
		(text "nRst" (rect 21 43 41 55)(font "Arial" ))
		(line (pt 0 48)(pt 16 48)(line_width 1))
	)
	(port
		(pt 0 64)
		(input)
		(text "Clk" (rect 0 0 12 12)(font "Arial" ))
		(text "Clk" (rect 21 59 33 71)(font "Arial" ))
		(line (pt 0 64)(pt 16 64)(line_width 1))
	)
	(port
		(pt 264 80)
		(output)
		(text "SRAM_address[19..0]" (rect 0 0 92 12)(font "Arial" ))
		(text "SRAM_address[19..0]" (rect 151 75 243 87)(font "Arial" ))
		(line (pt 264 80)(pt 248 80)(line_width 3))
	)
	(port
		(pt 264 112)
		(output)
		(text "SRAM_Read_Enable_N" (rect 0 0 105 12)(font "Arial" ))
		(text "SRAM_Read_Enable_N" (rect 138 107 243 119)(font "Arial" ))
		(line (pt 264 112)(pt 248 112)(line_width 1))
	)
	(port
		(pt 264 128)
		(output)
		(text "SRAM_Write_Enable_N" (rect 0 0 105 12)(font "Arial" ))
		(text "SRAM_Write_Enable_N" (rect 138 123 243 135)(font "Arial" ))
		(line (pt 264 128)(pt 248 128)(line_width 1))
	)
	(port
		(pt 264 144)
		(output)
		(text "SRAM_Chip_Enable_N" (rect 0 0 100 12)(font "Arial" ))
		(text "SRAM_Chip_Enable_N" (rect 143 139 243 151)(font "Arial" ))
		(line (pt 264 144)(pt 248 144)(line_width 1))
	)
	(port
		(pt 264 160)
		(output)
		(text "SRAM_Low_Byte_N" (rect 0 0 90 12)(font "Arial" ))
		(text "SRAM_Low_Byte_N" (rect 153 155 243 167)(font "Arial" ))
		(line (pt 264 160)(pt 248 160)(line_width 1))
	)
	(port
		(pt 264 176)
		(output)
		(text "SRAM_High_Byte_N" (rect 0 0 92 12)(font "Arial" ))
		(text "SRAM_High_Byte_N" (rect 151 171 243 183)(font "Arial" ))
		(line (pt 264 176)(pt 248 176)(line_width 1))
	)
	(port
		(pt 264 32)
		(bidir)
		(text "data[31..0]" (rect 0 0 40 12)(font "Arial" ))
		(text "data[31..0]" (rect 203 27 243 39)(font "Arial" ))
		(line (pt 264 32)(pt 248 32)(line_width 3))
	)
	(port
		(pt 264 48)
		(bidir)
		(text "address[31..0]" (rect 0 0 55 12)(font "Arial" ))
		(text "address[31..0]" (rect 188 43 243 55)(font "Arial" ))
		(line (pt 264 48)(pt 248 48)(line_width 3))
	)
	(port
		(pt 264 64)
		(bidir)
		(text "ctrl[31..0]" (rect 0 0 35 12)(font "Arial" ))
		(text "ctrl[31..0]" (rect 208 59 243 71)(font "Arial" ))
		(line (pt 264 64)(pt 248 64)(line_width 3))
	)
	(port
		(pt 264 96)
		(bidir)
		(text "SRAM_data[15..0]" (rect 0 0 76 12)(font "Arial" ))
		(text "SRAM_data[15..0]" (rect 167 91 243 103)(font "Arial" ))
		(line (pt 264 96)(pt 248 96)(line_width 3))
	)
	(drawing
		(rectangle (rect 16 16 248 192)(line_width 1))
	)
)
